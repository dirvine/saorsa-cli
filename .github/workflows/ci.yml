name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      if: matrix.rust == 'stable'
    
    - name: Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      if: matrix.rust == 'stable'
    
    - name: Build
      run: cargo build --all --verbose
    
    - name: Run tests
      run: cargo test --all --verbose

  release:
    name: Release Build
    if: github.event_name != 'pull_request'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
      with:
        targets: ${{ matrix.target }}

    - name: Install Zig (for musl builds)
      if: contains(matrix.target, 'linux-musl')
      uses: goto-bus-stop/setup-zig@v2

    - name: Install cargo-zigbuild
      if: contains(matrix.target, 'linux-musl')
      run: cargo install cargo-zigbuild

    - name: Build release (musl)
      if: contains(matrix.target, 'linux-musl')
      run: cargo zigbuild --release --target ${{ matrix.target }} --all

    - name: Build release (non-musl)
      if: ${{ !contains(matrix.target, 'linux-musl') }}
      run: cargo build --release --target ${{ matrix.target }} --all
    
    - name: Package binaries
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a saorsa-cli-${{ matrix.target }}.zip ./target/${{ matrix.target }}/release/sb.exe ./target/${{ matrix.target }}/release/sdisk.exe ./target/${{ matrix.target }}/release/saorsa.exe
        else
          tar czf saorsa-cli-${{ matrix.target }}.tar.gz -C ./target/${{ matrix.target }}/release sb sdisk saorsa
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: saorsa-cli-${{ matrix.target }}
        path: saorsa-cli-${{ matrix.target }}.*
        retention-days: 7
