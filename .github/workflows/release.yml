name: Release-v2
on:
  push:
    tags:
      - 'v*'
      - 'sb-v*'
      - 'sdisk-v*'
      - 'cli-v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: 'v0.1.0'

permissions:
  contents: write
  packages: write
  id-token: write

concurrency:
  group: release-${{ github.workflow_ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-22.04
    env:
      # Isolate rustup/cargo to temp so local installs aren't modified on self-hosted/act
      CARGO_HOME: ${{ runner.temp }}/cargo
      RUSTUP_HOME: ${{ runner.temp }}/rustup
      RUSTUP_TOOLCHAIN: stable
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Install Rust
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all -- --deny warnings

  build:
    name: Build Release - ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

    - name: Install Rust
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
      with:
        toolchain: stable

    - name: Build all binaries
      run: cargo build --release --workspace

    - name: Package binaries
      run: |
        cd target/release
        tar czf ../../sb-x86_64-unknown-linux-gnu.tar.gz sb
        tar czf ../../sdisk-x86_64-unknown-linux-gnu.tar.gz sdisk
        tar czf ../../cli-x86_64-unknown-linux-gnu.tar.gz saorsa
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: binaries-linux
        path: |
          sb-*.tar.gz
          sdisk-*.tar.gz
          cli-*.tar.gz
        retention-days: 7

  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
      with:
        tag_name: ${{ github.ref_name }}
        body: |
          ## Release ${{ github.ref_name }}

          This is an automated release using GH_RELEASE_TOKEN.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}


