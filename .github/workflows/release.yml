name: Release

on:
  push:
    tags:
      - 'v*'
      - 'sb-v*'
      - 'sdisk-v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: .tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            suffix: .tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .zip
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: .tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: .tar.gz
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    
    - name: Build
      run: |
        if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
        fi
        cargo build --release --target ${{ matrix.target }} --all
      shell: bash
    
    - name: Package
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a ../../../saorsa-cli-${{ matrix.target }}.zip sb.exe sdisk.exe
        else
          tar czf ../../../saorsa-cli-${{ matrix.target }}.tar.gz sb sdisk
        fi
        cd -
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: saorsa-cli-${{ matrix.target }}
        path: saorsa-cli-${{ matrix.target }}${{ matrix.suffix }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crates:
    name: Publish to crates.io
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Publish sb
      if: contains(github.ref, 'sb-v') || startsWith(github.ref, 'refs/tags/v')
      run: |
        cd sb
        cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
      continue-on-error: true
    
    - name: Publish sdisk
      if: contains(github.ref, 'sdisk-v') || startsWith(github.ref, 'refs/tags/v')
      run: |
        cd sdisk
        cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
      continue-on-error: true